#include<stdio.h>
#pragma warning(disable: 4996) // 禁用特定编译器警告，通常用于Visual Studio中避免gets等函数的警告

int main()
{
    char a[13]; // 定义一个字符数组用于存储ISBN码，包括可能的校验位
    int i, k = 1, sum = 0, j, f = 0; // i用于循环，k用于加权，sum用于累加和，j用于存储模运算结果，f用于标记校验位是否为'X'

    // 循环读取ISBN码的每一位
    for (i = 0; i <= 12; i++)
    {
        scanf("%c", &a[i]); // 使用scanf读取字符，但这里有个问题：它也会读取换行符等空白字符
        if (a[i] != '-' && i != 12) // 如果当前字符不是'-'且不是最后一位（校验位），则进行处理
        {
            sum = sum + (a[i] - '0') * k; // 将字符转换为数字并累加加权和
            k++; // 加权系数递增，对于10位ISBN码，这通常是交替的1和3
        }
    }// 注意：这里没有重置k的值，如果处理多个ISBN，这里会有问题

    j = sum % 11; // 计算加权和除以11的余数

    // 判断校验位是否正确
    if (a[12] == 'X' && j == 10) {
        printf("Right"); // 如果输入的校验位是'X'且计算出的余数也是10，则正确
        f = 1; // 设置标记位，表示校验位已经判断为正确
    }

    // 如果不是'X'的情况，直接比较余数和输入的校验位
    if (j == a[12] - '0')
        printf("Right"); // 如果余数等于输入的校验位（转换为数字后），则正确
    else if (f != 1) // 如果前面的判断没有将f设置为1，则进行错误处理
    {
        if (j != 10) a[12] = j + '0'; // 如果j不等于10，将校验位设置为j对应的数字字符
        else a[12] = 'X'; // 如果j等于10，将校验位设置为'X'

        // 输出修正后的ISBN码
        for (i = 0; i <= 12; i++)
        {
            // 下面的判断是多余的，因为前面已经将a[12]修正为有效的字符
            // if (a[i] == ':') { printf("X"); i++; } // 这里的冒号判断应该删除
            printf("%c", a[i]); // 直接输出字符
        }
    }
    return 0;
}